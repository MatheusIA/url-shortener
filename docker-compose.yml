version: '3.8'

services:
  postgres:
    image: bitnami/postgresql
    ports: 
      - '5432:5432'
    environment:
      - POSTGRESQL_USERNAME=docker
      - POSTGRESQL_PASSWORD=docker
      - POSTGRESQL_DATABASE=urlshortener
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network
  
  auth-service:
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
    ports:
      - '3001:3000'
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    command: >
      sh -c "
        
        npx prisma migrate deploy &&
        node dist/apps/auth-service/main.js
      "
    networks:
      - app-network

  url-service:
    build:
      context: .
      dockerfile: ./apps/url-service/Dockerfile
    ports:
      - '3002:3000'
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    command: >
      sh -c "
        
        npx prisma migrate deploy &&
        node dist/apps/url-service/main.js
      "
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network
networks:
  app-network:
    driver: bridge